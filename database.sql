-- MySQL Script generated by MySQL Workbench
-- Tue Feb 24 11:13:05 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Kalender
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Kalender
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Kalender` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `Kalender` ;

-- -----------------------------------------------------
-- Table `Kalender`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Kalender`.`User` ;

CREATE TABLE IF NOT EXISTS `Kalender`.`User` (
  `domene` VARCHAR(30) NOT NULL,
  `username` VARCHAR(30) NOT NULL,
  `passwordHash` VARCHAR(32) NOT NULL,
  `firstName` VARCHAR(50) NOT NULL,
  `lastName` VARCHAR(60) NOT NULL,
  `phone` DECIMAL(10,0) NULL,
  PRIMARY KEY (`domene`, `username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalender`.`Calendar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Kalender`.`Calendar` ;

CREATE TABLE IF NOT EXISTS `Kalender`.`Calendar` (
  `calendarid` INT NOT NULL,
  `name` VARCHAR(30) NULL,
  `description` VARCHAR(70) NULL,
  `dateCreated` DATETIME NULL,
  PRIMARY KEY (`calendarid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalender`.`Room`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Kalender`.`Room` ;

CREATE TABLE IF NOT EXISTS `Kalender`.`Room` (
  `roomid` INT NOT NULL,
  `name` VARCHAR(30) NULL,
  `capacity` INT NULL,
  PRIMARY KEY (`roomid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalender`.`Appointment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Kalender`.`Appointment` ;

CREATE TABLE IF NOT EXISTS `Kalender`.`Appointment` (
  `appointmentid` INT NOT NULL,
  `title` VARCHAR(60) NOT NULL,
  `description` VARCHAR(500) NULL,
  `location` VARCHAR(30) NULL,
  `starttime` DATETIME NOT NULL,
  `endtime` DATETIME NOT NULL,
  `repeatEndDate` DATE NULL,
  `repeat` INT NULL,
  `Calendar_calendarid` INT NOT NULL,
  `Room_roomid` INT NOT NULL,
  PRIMARY KEY (`appointmentid`, `Calendar_calendarid`),
  INDEX `fk_Appointment_Calendar1_idx` (`Calendar_calendarid` ASC),
  INDEX `fk_Appointment_Room1_idx` (`Room_roomid` ASC),
  CONSTRAINT `fk_Appointment_Calendar1`
    FOREIGN KEY (`Calendar_calendarid`)
    REFERENCES `Kalender`.`Calendar` (`calendarid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Appointment_Room1`
    FOREIGN KEY (`Room_roomid`)
    REFERENCES `Kalender`.`Room` (`roomid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalender`.`Utility`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Kalender`.`Utility` ;

CREATE TABLE IF NOT EXISTS `Kalender`.`Utility` (
  `utilityid` INT NOT NULL,
  `name` VARCHAR(30) NULL,
  PRIMARY KEY (`utilityid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalender`.`Room_has_Utility`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Kalender`.`Room_has_Utility` ;

CREATE TABLE IF NOT EXISTS `Kalender`.`Room_has_Utility` (
  `Room_roomid` INT NOT NULL,
  `Utility_utilityid` INT NOT NULL,
  PRIMARY KEY (`Room_roomid`, `Utility_utilityid`),
  INDEX `fk_Room_has_Utility_Utility1_idx` (`Utility_utilityid` ASC),
  INDEX `fk_Room_has_Utility_Room_idx` (`Room_roomid` ASC),
  CONSTRAINT `fk_Room_has_Utility_Room`
    FOREIGN KEY (`Room_roomid`)
    REFERENCES `Kalender`.`Room` (`roomid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Room_has_Utility_Utility1`
    FOREIGN KEY (`Utility_utilityid`)
    REFERENCES `Kalender`.`Utility` (`utilityid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalender`.`Attendee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Kalender`.`Attendee` ;

CREATE TABLE IF NOT EXISTS `Kalender`.`Attendee` (
  `User_userid` INT NOT NULL,
  `Appointment_appointmentid` INT NOT NULL,
  `Appointment_Calendar_calendarid` INT NOT NULL,
  `timeInvited` DATETIME NULL,
  `timeAnswered` DATETIME NULL,
  `willAttend` TINYINT(1) NULL,
  `isOwner` TINYINT(1) NULL,
  PRIMARY KEY (`User_userid`, `Appointment_appointmentid`, `Appointment_Calendar_calendarid`),
  INDEX `fk_User_has_Appointment_Appointment1_idx` (`Appointment_appointmentid` ASC, `Appointment_Calendar_calendarid` ASC),
  CONSTRAINT `fk_User_has_Appointment_Appointment1`
    FOREIGN KEY (`Appointment_appointmentid` , `Appointment_Calendar_calendarid`)
    REFERENCES `Kalender`.`Appointment` (`appointmentid` , `Calendar_calendarid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalender`.`Notification`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Kalender`.`Notification` ;

CREATE TABLE IF NOT EXISTS `Kalender`.`Notification` (
  `User_userid` INT NOT NULL,
  `Appointment_appointmentid` INT NOT NULL,
  `Appointment_Calendar_calendarid` INT NOT NULL,
  `text` VARCHAR(200) NULL,
  `seen` TINYINT(1) NULL,
  `sent` DATETIME NULL,
  PRIMARY KEY (`User_userid`, `Appointment_appointmentid`, `Appointment_Calendar_calendarid`),
  INDEX `fk_User_has_Appointment_Appointment2_idx` (`Appointment_appointmentid` ASC, `Appointment_Calendar_calendarid` ASC),
  CONSTRAINT `fk_User_has_Appointment_Appointment2`
    FOREIGN KEY (`Appointment_appointmentid` , `Appointment_Calendar_calendarid`)
    REFERENCES `Kalender`.`Appointment` (`appointmentid` , `Calendar_calendarid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalender`.`User_has_Calendar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Kalender`.`User_has_Calendar` ;

CREATE TABLE IF NOT EXISTS `Kalender`.`User_has_Calendar` (
  `User_userid` INT NOT NULL,
  `Calendar_calendarid` INT NOT NULL,
  `color` VARCHAR(7) NULL,
  `isVisible` TINYINT(1) NULL,
  `isOwner` TINYINT(1) NULL,
  `notifications` TINYINT(1) NULL,
  PRIMARY KEY (`User_userid`, `Calendar_calendarid`),
  INDEX `fk_User_has_Calendar_Calendar1_idx` (`Calendar_calendarid` ASC),
  CONSTRAINT `fk_User_has_Calendar_Calendar1`
    FOREIGN KEY (`Calendar_calendarid`)
    REFERENCES `Kalender`.`Calendar` (`calendarid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalender`.`GroupCalendar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Kalender`.`GroupCalendar` ;

CREATE TABLE IF NOT EXISTS `Kalender`.`GroupCalendar` (
  `User_userid` INT NOT NULL,
  `Calendar_calendarid` INT NOT NULL,
  PRIMARY KEY (`User_userid`, `Calendar_calendarid`),
  INDEX `fk_User_has_Calendar1_Calendar1_idx` (`Calendar_calendarid` ASC),
  CONSTRAINT `fk_User_has_Calendar1_Calendar1`
    FOREIGN KEY (`Calendar_calendarid`)
    REFERENCES `Kalender`.`Calendar` (`calendarid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
